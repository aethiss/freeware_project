{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types'\n\nimport Link from 'next/link';\nimport Router from 'next/router'; // helpers\n\nimport Swal from 'sweetalert2'; // Actions\n\nimport { loginUser } from '../../../redux/actions/user';\nimport { setCookie } from '../../../libs/cookieHelper';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onLogin\", () => {\n      const {\n        dispatch\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state; // console.log('onLogin', this.props, this.state)\n\n      dispatch(loginUser(email, password)).then(res => {\n        console.log('user login success', res);\n        setCookie('token', res[0].token, 60);\n        Router.push({\n          pathname: '/projects'\n        });\n      }).catch(err => {\n        console.log('user login error', err);\n        Swal.fire('Error...', err.msg, 'error');\n      });\n    });\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"h2\", null, \"Login\"), __jsx(\"form\", {\n      onSubmit: this.onLogin\n    }, __jsx(\"p\", null, __jsx(\"label\", {\n      htmlFor: \"firstName\"\n    }, \"Email\", __jsx(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        this.setState({\n          email: e.target.value\n        });\n      }\n    }))), __jsx(\"p\", null, __jsx(\"label\", {\n      htmlFor: \"lastName\"\n    }, \"password\", __jsx(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      }\n    }))), __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    })), __jsx(\"div\", null, __jsx(\"hr\", null), __jsx(Link, {\n      href: \"/register\"\n    }, __jsx(\"button\", null, \"Register\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/aethiss/Web/Projects/freewareIdee/freeware-beta/src/components/common/login/Login.js"],"names":["React","Component","Link","Router","Swal","loginUser","setCookie","Login","constructor","props","dispatch","email","password","state","then","res","console","log","token","push","pathname","catch","err","fire","msg","render","onLogin","e","setState","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,SAAT,QAA0B,4BAA1B;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC5BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qCAQT,MAAM;AACd,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAM;AAAEE,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC,CAFc,CAGd;;AACAH,MAAAA,QAAQ,CAACL,SAAS,CAACM,KAAD,EAAQC,QAAR,CAAV,CAAR,CACGE,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACAT,QAAAA,SAAS,CAAC,OAAD,EAAUS,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAjB,EAAwB,EAAxB,CAAT;AACAf,QAAAA,MAAM,CAACgB,IAAP,CAAY;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAZ;AAGD,OAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,GAAhC;AACAlB,QAAAA,IAAI,CAACmB,IAAL,CAAU,UAAV,EAAsBD,GAAG,CAACE,GAA1B,EAA+B,OAA/B;AACD,OAXH;AAYD,KAxBkB;;AAEjB,SAAKX,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAoBDa,EAAAA,MAAM,GAAG;AACP,WACE,mBACE,0BADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,iBACE;AAAO,MAAA,OAAO,EAAC;AAAf,gBAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACb,aAAKC,QAAL,CAAc;AAAEjB,UAAAA,KAAK,EAAEgB,CAAC,CAACE,MAAF,CAASC;AAAlB,SAAd;AACD;AAJH,MAFF,CADF,CADF,EAYE,iBACE;AAAO,MAAA,OAAO,EAAC;AAAf,mBAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEH,CAAC,IAAI;AACb,aAAKC,QAAL,CAAc;AAAEhB,UAAAA,QAAQ,EAAEe,CAAC,CAACE,MAAF,CAASC;AAArB,SAAd;AACD;AAJH,MAFF,CADF,CAZF,EAuBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B,MAvBF,CAFF,EA2BE,mBACE,iBADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,iCADF,CAFF,CA3BF,CADF;AAoCD;;AAhE2B;;AAmE9B,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport Router from 'next/router'\n\n// helpers\nimport Swal from 'sweetalert2'\n\n// Actions\nimport { loginUser } from '../../../redux/actions/user'\nimport { setCookie } from '../../../libs/cookieHelper'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  onLogin = () => {\n    const { dispatch } = this.props\n    const { email, password } = this.state\n    // console.log('onLogin', this.props, this.state)\n    dispatch(loginUser(email, password))\n      .then(res => {\n        console.log('user login success', res)\n        setCookie('token', res[0].token, 60)\n        Router.push({\n          pathname: '/projects',\n        })\n      })\n      .catch(err => {\n        console.log('user login error', err)\n        Swal.fire('Error...', err.msg, 'error')\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Login</h2>\n        <form onSubmit={this.onLogin}>\n          <p>\n            <label htmlFor=\"firstName\">\n              Email\n              <input\n                type=\"text\"\n                onChange={e => {\n                  this.setState({ email: e.target.value })\n                }}\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"lastName\">\n              password\n              <input\n                type=\"text\"\n                onChange={e => {\n                  this.setState({ password: e.target.value })\n                }}\n              />\n            </label>\n          </p>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <div>\n          <hr />\n          <Link href=\"/register\">\n            <button>Register</button>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}